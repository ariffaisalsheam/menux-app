# =============================================================== #
#                MAIN APPLICATION CONFIGURATION                   #
# =============================================================== #
spring:
  application:
    name: menu-x-backend
  jpa:
    hibernate:
      # This is controlled by profiles below
      ddl-auto: none
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  main:
    banner-mode: "off"

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

---
# =============================================================== #
#                   PRODUCTION PROFILE (for Render)               #
# =============================================================== #
spring:
  config:
    activate:
      on-profile: prod
  # Use the full JDBC URL from the environment variable for the pooler
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate # Use 'validate' for safety in production
    show-sql: false
    properties:
      # Correctly formatted JPA properties
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate.format_sql: true
      hibernate.jdbc.batch_size: 20
      hibernate.order_inserts: true
      hibernate.order_updates: true

# Application-specific properties for production
app:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 86400000
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
  qr:
    base-url: ${QR_BASE_URL}
  ai:
    gemini:
      api-key: ${GEMINI_API_KEY}

# Logging for production
logging:
  level:
    com.menux: INFO
    org.springframework: WARN
    org.hibernate: WARN